
> pizza-button@1.0.0 test /Users/daltonclaybrook/Documents/Personal/AWSIOT/pizza-button
> export STORE_ID=6936 && node test.js

starting handler...
Received event: { serialNumber: 'abc123',
  batteryVoltage: '10mV',
  clickType: 'SINGLE' }
store ID: 6936
key: menuByCode, val: [object Object]
key: rootCategories, val: [object Object]
key: menuData, val: [object Object]
key: getRaw, val: function () {
    return this.menuData;
}
key: buildCategories, val: function (categoryData,parent) {
    var category = new MenuCategory(categoryData,parent);
    for (var subIndex in categoryData.Categories) {
        category.getSubcategories().push(this.buildCategories(categoryData.Categories[subIndex],category));
    }
    categoryData.Products.forEach((function(productCode) { //link up products and categories
        var product = this.menuByCode[productCode];
        if (!product) {
            console.log("PRODUCT NOT FOUND: "+productCode,category.getCode());
            return;
        }
        category.getProducts().push(product);
        product.getCategories().push(category);
    }).bind(this));
    return category;
}
key: parseItems, val: function (parentMenuData,ParseClass) {
    var items = [];
    Object.keys(parentMenuData).forEach((function(code) {
        var menuData = parentMenuData[code];
        var obj = new ParseClass(menuData);
        this.menuByCode[obj.getCode()] = obj;
        items.push(obj);
    }).bind(this));
    return items;
}
key: parseMenu, val: function (menuData) {
    this.menuByCode = {};
    var products = this.parseItems(menuData.result.Products,MenuItem);
    var coupons = this.parseItems(menuData.result.Coupons,MenuItem);
    var preconfigured = this.parseItems(menuData.result.PreconfiguredProducts,MenuItem);

    this.rootCategories = {}; //generate category tree using MenuCategory objects
    for (var categoryType in menuData.result.Categorization) {
        var categoryData = menuData.result.Categorization[categoryType];
        this.rootCategories[categoryType] = this.buildCategories(categoryData);
    }
}
key: getFoodCategory, val: function () {
    return this.rootCategories["Food"];
}
key: getCouponCategory, val: function () {
    return this.rootCategories["Coupons"];
}
key: getPreconfiguredCategory, val: function () {
    return this.rootCategories["PreconfiguredProducts"];
}
key: getItemByCode, val: function (code) {
    return this.menuByCode[code];
}
